<?xml version="1.0"?>
<!DOCTYPE module PUBLIC "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN" "https://checkstyle.org/dtds/configuration_1_3.dtd">

<module name="Checker">
    <property name="charset" value="UTF-8"/>
    <property name="severity" value="warning"/>
    <property name="fileExtensions" value="java, properties, xml"/>

    <module name="TreeWalker">
        <property name="tabWidth" value="4"/>

		<!-- Annotations -->
		<module name="AnnotationLocation">
			<property name="allowSamelineSingleParameterlessAnnotation" value="false"/>
		</module>
		<module name="AnnotationUseStyle"/>

		<!-- Block checks -->
		<module name="AvoidNestedBlocks"/>
		<module name="EmptyBlock"/>
		<module name="EmptyCatchBlock"/>
		<module name="LeftCurly"/>
		<module name="NeedBraces"/>
		<module name="RightCurly">
			<property name="id" value="RightCurlySame"/>
			<property name="tokens" value="LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_DO"/>
		</module>
		<module name="RightCurly">
			<property name="id" value="RightCurlyAlone"/>
			<property name="option" value="alone"/>
			<property name="tokens" value="CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, STATIC_INIT, INSTANCE_INIT"/>
		</module>

		<!-- Class design -->
		<module name="HideUtilityClassConstructor"/>
		<module name="InterfaceIsType"/>
		<module name="MutableException"/>
		<module name="OneTopLevelClass"/>

		<!-- Coding -->
		<module name="ArrayTrailingComma"/>
		<module name="CovariantEquals"/>
		<module name="DefaultComesLast"/>
		<module name="EmptyStatement"/>
		<module name="EqualsAvoidNull"/>
		<module name="EqualsHashCode"/>
		<module name="ExplicitInitialization"/>
		<module name="FallThrough"/>
		<module name="HiddenField">
			<property name="ignoreConstructorParameter" value="true"/>
			<property name="ignoreSetter" value="true"/>
		</module>
		<module name="IllegalCatch"/>
		<module name="IllegalInstantiation"/>
		<module name="IllegalThrows"/>
		<module name="IllegalTokenText">
			<property name="tokens" value="STRING_LITERAL, CHAR_LITERAL"/>
			<property name="format" value="\\u00(09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\(0(10|11|12|14|15|42|47)|134)"/>
			<property name="message" value="Consider using special escape sequence instead of octal value or Unicode escaped value."/>
		</module>
		<module name="InnerAssignment"/>
		<module name="MagicNumber"/>
		<module name="MissingSwitchDefault"/>
		<module name="ModifiedControlVariable"/>
		<module name="MultipleVariableDeclarations"/>
		<module name="MultipleStringLiterals">
			<property name="allowedDuplicates" value="2"/>
		</module>
		<module name="NoClone"/>
		<module name="NoFinalizer"/>
		<module name="OneStatementPerLine"/>
		<module name="OverloadMethodsDeclarationOrder"/>
		<module name="PackageDeclaration"/>
		<module name="SimplifyBooleanExpression"/>
		<module name="SimplifyBooleanReturn"/>
		<module name="StringLiteralEquality"/>
		<module name="VariableDeclarationUsageDistance"/>

		<!-- Imports -->
		<module name="AvoidStarImport"/>
		<module name="AvoidStaticImport"/>
		<module name="IllegalImport"/>
		<module name="ImportOrder">
			<property name="groups" value="*,javax,java"/>
			<property name="ordered" value="true"/>
			<property name="separated" value="true"/>
			<property name="option" value="bottom"/>
			<property name="sortStaticImportsAlphabetically" value="true"/>
		</module>
		<module name="SuppressionXpathSingleFilter">
			<property name="checks" value="ImportOrder"/>
			<property name="message" value="^'java\..*'.*"/>
		</module>
		<module name="RedundantImport"/>
		<module name="UnusedImports"/>

		<!-- Javadoc comments -->
		<module name="AtclauseOrder">
			<property name="tagOrder" value="@param, @return, @throws, @deprecated"/>
			<property name="target" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF"/>
		</module>
		<module name="JavadocParagraph"/>
		<module name="JavadocStyle">
			<property name="checkFirstSentence" value="false"/>
		</module>
		<module name="JavadocTagContinuationIndentation"/>
		<module name="NonEmptyAtclauseDescription"/>
		<module name="SingleLineJavadoc">
			<property name="ignoreInlineTags" value="false"/>
		</module>

		<!-- Miscellaneous -->
		<module name="ArrayTypeStyle"/>
		<module name="AvoidEscapedUnicodeCharacters">
			<property name="allowEscapesForControlCharacters" value="true"/>
			<property name="allowByTailComment" value="true"/>
			<property name="allowNonPrintableEscapes" value="true"/>
		</module>
		<module name="CommentsIndentation"/>
		<module name="Indentation"/>
        <module name="OuterTypeFilename"/>
		<module name="UncommentedMain"/>
		<module name="UpperEll"/>

		<!-- Modifiers -->
		<module name="ModifierOrder"/>

		<!-- Naming conventions -->
		<module name="AbbreviationAsWordInName">
			<property name="allowedAbbreviationLength" value="1"/>
		</module>
		<module name="CatchParameterName"/>
		<module name="ClassTypeParameterName">
			<property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*$)"/>
			<message key="name.invalidPattern" value="Class type name ''{0}'' must match pattern ''{1}''."/>
		</module>
		<module name="ConstantName"/>
		<module name="InterfaceTypeParameterName">
			<property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*$)"/>
			<message key="name.invalidPattern" value="Interface type name ''{0}'' must match pattern ''{1}''."/>
		</module>
		<module name="LambdaParameterName">
			<property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
			<message key="name.invalidPattern" value="Lambda parameter name ''{0}'' must match pattern ''{1}''."/>
		</module>
		<module name="LocalVariableName">
			<property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
			<message key="name.invalidPattern" value="Local variable name ''{0}'' must match pattern ''{1}''."/>
		</module>
		<module name="MemberName">
			<property name="format" value="^([a-z][a-z0-9][a-zA-Z0-9]*)|([A-Z][A-Z0-9]+(_[A-Z0-9]+)*)$"/>
			<message key="name.invalidPattern" value="Member name ''{0}'' must match pattern ''{1}''."/>
		</module>
		<module name="MethodName">
			<property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
			<message key="name.invalidPattern" value="Method name ''{0}'' must match pattern ''{1}''."/>
		</module>
		<module name="MethodTypeParameterName">
			<property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*$)"/>
			<message key="name.invalidPattern" value="Method type name ''{0}'' must match pattern ''{1}''."/>
		</module>
		<module name="PackageName">
			<property name="format" value="^[a-z][a-z]+(\.[a-z][a-z0-9]*)*$"/>
			<message key="name.invalidPattern" value="Package name ''{0}'' must match pattern ''{1}''."/>
		</module>
		<module name="ParameterName">
			<property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
			<message key="name.invalidPattern" value="Parameter name ''{0}'' must match pattern ''{1}''."/>
		</module>
		<module name="TypeName">
			<message key="name.invalidPattern" value="Type name ''{0}'' must match pattern ''{1}''."/>
		</module>

		<!-- Regexp -->
		<module name="RegexpSinglelineJava">
			<property name="format" value="^\t* "/>
			<property name="ignoreComments" value="true"/>
			<property name="message" value="Indent must use tab characters"/>
		</module>

		<!-- Size violations -->
        <module name="LineLength">
			<property name="max" value="160"/>
			<property name="ignorePattern" value="^package.*|^import.*|a href|href|http://|https://|ftp://"/>
        </module>
		<module name="MethodLength">
			<property name="countEmpty" value="false"/>
		</module>
		<module name="OuterTypeNumber"/>
		<module name="ParameterNumber"/>

		<!-- Whitespace -->
		<module name="EmptyForInitializerPad"/>
		<module name="EmptyForIteratorPad"/>
		<module name="EmptyLineSeparator">
			<property name="allowNoEmptyLineBetweenFields" value="true"/>
			<property name="allowMultipleEmptyLines" value="false"/>
			<property name="allowMultipleEmptyLinesInsideClassMembers" value="false"/>
		</module>
		<module name="GenericWhitespace">
			<message key="ws.followed" value="GenericWhitespace ''{0}'' is followed by whitespace."/>
			<message key="ws.preceded" value="GenericWhitespace ''{0}'' is preceded with whitespace."/>
			<message key="ws.illegalFollow" value="GenericWhitespace ''{0}'' should followed by whitespace."/>
			<message key="ws.notPreceded" value="GenericWhitespace ''{0}'' is not preceded with whitespace."/>
		</module>
		<module name="MethodParamPad"/>
        <module name="NoLineWrap"/>
		<module name="NoWhitespaceAfter"/>
		<module name="NoWhitespaceBefore">
			<property name="tokens" value="COMMA, SEMI, POST_INC, POST_DEC, DOT, ELLIPSIS, METHOD_REF"/>
			<property name="allowLineBreaks" value="true"/>
		</module>
		<module name="OperatorWrap">
			<property name="option" value="eol"/>
			<property name="tokens" value="BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR, LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR, METHOD_REF "/>
		</module>
		<module name="ParenPad"/>
		<module name="SeparatorWrap">
			<property name="id" value="SeparatorWrapDot"/>
			<property name="tokens" value="DOT"/>
			<property name="option" value="nl"/>
		</module>
		<module name="SeparatorWrap">
			<property name="id" value="SeparatorWrapComma"/>
			<property name="tokens" value="COMMA"/>
			<property name="option" value="EOL"/>
		</module>
		<module name="SeparatorWrap">
			<!-- ELLIPSIS is EOL until https://github.com/google/styleguide/issues/258 -->
			<property name="id" value="SeparatorWrapEllipsis"/>
			<property name="tokens" value="ELLIPSIS"/>
			<property name="option" value="EOL"/>
		</module>
		<module name="SeparatorWrap">
			<!-- ARRAY_DECLARATOR is EOL until https://github.com/google/styleguide/issues/259 -->
			<property name="id" value="SeparatorWrapArrayDeclarator"/>
			<property name="tokens" value="ARRAY_DECLARATOR"/>
			<property name="option" value="EOL"/>
		</module>
		<module name="SeparatorWrap">
			<property name="id" value="SeparatorWrapMethodRef"/>
			<property name="tokens" value="METHOD_REF"/>
			<property name="option" value="nl"/>
		</module>
		<module name="SingleSpaceSeparator">
			<property name="validateComments" value="true"/>
		</module>
		<module name="TypecastParenPad"/>
		<module name="WhitespaceAfter"/>
		<module name="WhitespaceAround">
			<property name="allowEmptyConstructors" value="true"/>
			<property name="allowEmptyTypes" value="true"/>
			<property name="ignoreEnhancedForColon" value="false"/>
			<message key="ws.notFollowed" value="WhitespaceAround: ''{0}'' is not followed by whitespace. Empty blocks may only be represented as '{}' when not part of a multi-block statement (4.1.3)"/>
			<message key="ws.notPreceded" value="WhitespaceAround: ''{0}'' is not preceded with whitespace."/>
		</module>

		<!-- Suppression -->
		<module name="SuppressWithNearbyCommentFilter">
			<metadata name="net.sf.eclipsecs.core.comment" value="Avoids triggering any audits for the given (check) for the current line and the next (var) lines"/>
			<property name="commentFormat" value="Checkstyle ignore (\w+) for next (\d+) (line|lines)$"/>
			<property name="checkFormat" value="$1"/>
			<property name="influenceFormat" value="$2"/>
		</module>
    </module>

	<!-- Miscellaneous -->
	<module name="NewlineAtEndOfFile"/>
	<module name="UniqueProperties"/>

	<!-- Regexp -->
	<module name="RegexpSingleline">
		<property name="format" value="\s+$"/>
		<property name="message" value="Line has trailing spaces."/>
	</module>
	<module name="RegexpMultiline">
		<property name="format" value="System\s*\.\s*out\s*\.\s*.*"/>
		<property name="message" value="System.out is discouraged."/>
	</module>
	<module name="RegexpMultiline">
		<property name="format" value=".*\.append\(.*\s\+\s.*"/>
		<property name="message" value="+ discouraged in .append, use .append instead."/>
	</module>

	<!-- Size violations -->
	<module name="FileLength"/>
</module>
